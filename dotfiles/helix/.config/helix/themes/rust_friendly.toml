# Thème Helix optimisé pour Rust - basé sur votre palette existante
# IMPORTANT: Nécessite la configuration rust-analyzer ci-dessous

# === TYPES - Distinctions spécifiques Rust via tree-sitter et LSP ===
"type" = "yellow"                                               # Type générique de base
"type.struct" = "yellow"                                        # Structs (via tree-sitter)
"type.enum" = "yellow"                                          # Enums
"type.union" = "yellow"                                         # Unions
"type.builtin" = "yellow"                                       # Types primitifs

# === TOKENS SÉMANTIQUES RUST-ANALYZER ===
# Ces règles nécessitent rust-analyzer avec semantic tokens activés
"struct" = "yellow"                                             # Token sémantique struct
"enum" = "yellow"                                               # Token sémantique enum  
"type.trait" = { fg = "teal", modifiers = ["italic"] }              # TRAITS en bleu pétrole + italique
"interface" = { fg = "teal", modifiers = ["italic"] }          # Alias pour trait dans certains contextes
"typeParameter" = "yellow"                                      # Paramètres génériques

# === MODIFIERS SÉMANTIQUES ===
"keyword.unsafe" = { fg = "red", modifiers = ["bold"] }        # Mot-clé unsafe spécifiquement
"*.mutable" = { modifiers = ["underlined"] }                   # Variables mutables soulignées
"*.consuming" = { modifiers = ["crossed_out"] }              # Valeurs consommées barrées

# === CONSTANTES ===
"constant" = "purple"
"constant.numeric" = "green"
"constant.character.escape" = "cyan"

# === CHAÎNES ===
"string" = "green"
"string.regexp" = "orange"

# === COMMENTAIRES ===
"comment" = "grey"
"comment.documentation" = { fg = "grey", modifiers = ["italic"] } # Doc comments distinctifs

# === VARIABLES ===
"variable" = "fg"
"variable.builtin" = "orange"
"variable.parameter" = { fg = "fg", modifiers = ["italic"] } 
"variable.other.member" = "fg"

# === LABELS ===
"label" = "orange"

# === PONCTUATION ===
"punctuation" = "grey"
"punctuation.delimiter" = "grey"
"punctuation.bracket" = "fg"

# === MOTS-CLÉS ===
"keyword" = "purple"
"keyword.directive" = "cyan"
"keyword.storage.type" = "purple"                              # mut, ref, etc.
"keyword.storage.modifier" = "purple"                          # pub, const, static
"keyword.control" = "purple"                                   # if, else, match, for, while

# === OPÉRATEURS ===
"operator" = "red"

# === FONCTIONS ===
"function" = "blue"
"function.builtin" = "blue"
"function.macro" = "cyan"
"function.method" = "blue"                                      # Méthodes

# === AUTRES ÉLÉMENTS ===
"tag" = "yellow"
"namespace" = "red"
"attribute" = "cyan"
"constructor" = "yellow"
"module" = "red"
"special" = "orange"

# === MARKUP ===
"markup.heading.marker" = "grey"
"markup.heading.1" = { fg = "purple", modifiers = ["bold"] }
"markup.heading.2" = { fg = "red", modifiers = ["bold"] }
"markup.heading.3" = { fg = "blue", modifiers = ["bold"] }
"markup.heading.4" = { fg = "yellow", modifiers = ["bold"] }
"markup.heading.5" = { fg = "green", modifiers = ["bold"] }
"markup.heading.6" = { fg = "fg", modifiers = ["bold"] }
"markup.list" = "red"
"markup.bold" = { modifiers = ["bold"] }
"markup.italic" = { modifiers = ["italic"] }
"markup.link.url" = { fg = "green", modifiers = ["underlined"] }
"markup.link.text" = "purple"
"markup.quote" = "grey"
"markup.raw" = "green"

# === DIFF ===
"diff.plus" = "green"
"diff.delta" = "orange"
"diff.minus" = "red"

# === INTERFACE UTILISATEUR ===
"ui.background" = { bg = "bg1" }
"ui.background.separator" = "grey"
"ui.cursor" = { fg = "bg0", bg = "fg" }
"ui.cursor.match" = { fg = "orange", bg = "diff_yellow" }
"ui.cursor.insert" = { fg = "black", bg = "grey" }
"ui.cursor.select" = { fg = "bg0", bg = "blue" }
"ui.cursorline.primary" = { bg = "bg1" }
"ui.cursorline.secondary" = { bg = "bg1" }
"ui.selection" = { bg = "bg4" }
"ui.linenr" = "grey"
"ui.linenr.selected" = "fg"
"ui.statusline" = { fg = "fg", bg = "bg3" }
"ui.statusline.inactive" = { fg = "grey", bg = "bg1" }
"ui.statusline.normal" = { fg = "bg0", bg = "fg", modifiers = ["bold"] }
"ui.statusline.insert" = { fg = "bg0", bg = "purple", modifiers = ["bold"] }
"ui.statusline.select" = { fg = "bg0", bg = "blue", modifiers = ["bold"] }
"ui.bufferline" = { fg = "grey", bg = "bg1" }
"ui.bufferline.active" = { fg = "fg", bg = "bg4", modifiers = ["bold"] }
"ui.popup" = { fg = "grey", bg = "bg2" }
"ui.window" = { fg = "grey", bg = "bg0" }
"ui.help" = { fg = "fg", bg = "bg2" }
"ui.text" = "fg"
"ui.text.focus" = "green"
"ui.menu" = { fg = "fg", bg = "bg3" }
"ui.menu.selected" = { fg = "bg0", bg = "blue" }
"ui.virtual.whitespace" = { fg = "bg4" }
"ui.virtual.indent-guide" = { fg = "bg4" }
"ui.virtual.ruler" = { bg = "bg2" }

# === DIAGNOSTICS ===
"hint" = "blue"
"info" = "green"
"warning" = "yellow"
"error" = "red"
"diagnostic" = { underline = { style = "line" } }
"diagnostic.hint" = { underline = { color = "blue", style = "dotted" } }
"diagnostic.info" = { underline = { color = "green", style = "dotted" } }
"diagnostic.warning" = { underline = { color = "yellow", style = "curl" } }
"diagnostic.error" = { underline = { color = "red", style = "curl" } }

[palette]
black = "#202023"
bg = "#171719"
bg0 = "#2b2d37"
bg1 = "#1D242B"
bg2 = "#363a49"
bg3 = "#3a3e4e"
bg4 = "#404455"
bg_grey = "#7e869b"
bg_red = "#ec7279"
diff_red = "#55393d"
bg_green = "#a0c980"
diff_green = "#394634"
bg_blue = "#6cb6eb"
diff_blue = "#354157"
bg_purple = "#d38aea"
diff_yellow = "#4e432f"
fg = "#c5cdd9"
red = "#ec7279"
orange = "#e59b77"
yellow = "#deb974"
green = "#a0c980"
cyan = "#5dbbc1"
blue = "#6cb6eb"
purple = "#d38aea"
grey = "#7e8294"
grey_dim = "#5b5e71"

# Couleur spécifique pour les traits Rust
teal = "#4a9b8e"  # Bleu pétrole pour les traits

